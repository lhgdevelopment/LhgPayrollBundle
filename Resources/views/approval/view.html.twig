{% extends 'base.html.twig' %}
{% import "macros/widgets.html.twig" as widgets %}

{% block page_title %}{{ 'LHG Payroll'|trans }}{% endblock %}

{% block main %}
    {% block content %} 
        <div id="myPayroll" class="mt-4">
            <div class="mt-4">
                <div class="mt-4">  
                    <p class="mt-6" style="margin-tp: 10px;"><strong>Name</strong>: {{ approval.user.alias  }}</p>
                    <p class="mt-6"><strong>Total Hours</strong>: {{ payrollData.total_hours|number_format(3) }} hrs</p>
                    <p><strong>Total Earnings</strong>: ${{ payrollData.total_earnings|number_format(3) }}</p>
                </div>


                <div class="table-responsive mt-4">
                    <table class="table table-bordered">
                        <thead class="thead-dark">
                            <tr>
                                <th>Project</th>
                                <th>Total Duration</th>
                                <th>Total Amount</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for projectId, projectData in projectWiseData %}
                            <tr>
                                <td>{{ projectData.projectName }}</td>
                                <td>{{ projectData.totalDuration|number_format(3) }} hr</td>
                                <td>${{ projectData.totalAmount|number_format(3) }}</td>
                            </tr>
                            <tr>
                                <td colspan="3">
                                    <table class="sub-table table table-striped">
                                        <thead>
                                            <tr>
                                                <th>Date</th>
                                                <th>Total Duration</th>
                                                <th>Total Amount</th>
                                                <th>Begin</th>
                                                <th>End</th>
                                                <th>Description</th> 

                                            </tr>
                                        </thead>
                                        <tbody>
                                            {% for date, timesheetData in projectData.timesheetsByDate %}
                                            <tr>
                                                <td>{{ date }}</td>
                                                <td>{{ timesheetData.totalDuration|number_format(3) }} hr</td>
                                                <td>${{ timesheetData.totalAmount|number_format(3) }}</td>
                                            </tr>
                                            {% for timesheet in timesheetData.timesheets %}
                                            <tr>
                                                <td>{{ timesheet.date }}</td>
                                                <td>{{ timesheet.duration_in_hour|number_format(3) }} hr</td>
                                                <td>${{ timesheet.rate|number_format(3) }}</td>
                                                <td>{{ timesheet.begin }}</td>
                                                <td>{{ timesheet.end }}</td>
                                                <td>{{ timesheet.description }}</td> 
                                            </tr>
                                            {% endfor %}
                                            {% endfor %}
                                        </tbody>
                                    </table>
                                </td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>

                    {# 1 = pending. team lead to approve / reject #}
                    {% if approval.status == 1 %}
                    <button id="approve_btn" type="button" class="btn btn-success" data-toggle="modal" data-target="#approveModal">
                        Approve
                    </button>

                    <div class="modal fade" id="approveModal" tabindex="-1" role="dialog" aria-labelledby="approveModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="approveModalLabel">Approve Payroll</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <form id="approvalForm">
                                        <label for="message">Note:</label>
                                        <input type="text" id="message" class="form-control"> 
                                    </form>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                    <button type="button" id="approveConfirmBtn" class="btn btn-success">Approve</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    {# 2 = approved by teamlead and finance to approve / reject #}
                    {% elseif approval.status == 2 and is_granted('ROLE_SUPER_ADMIN') %}
                        <!-- Add this button inside the if statement for admins -->
                        <button id="approve_btn" type="button" class="btn btn-success" data-toggle="modal" data-target="#approveModal">
                            Approve
                        </button>

                        <!-- Modal -->
                        <div class="modal fade" id="approveModal" tabindex="-1" role="dialog" aria-labelledby="approveModalLabel" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="approveModalLabel">Approve Payroll</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body"> 
                                        <form id="approvalForm">
                                            <label for="commission">Commission:</label>
                                            <input type="number" id="commission" class="form-control"> 

                                            <label for="adjustment">Adjustment:</label>
                                            <input type="number" id="adjustment" class="form-control">

                                            <label for="deduction">Deduction:</label>
                                            <input type="number" id="deduction" class="form-control"> 

                                            <label for="payment_method">Paid Through:</label>
                                            {# <input type="number" id="payment_method" class="form-control">  #}
                                            <select class="form-control" id="payment_method">
                                                <option value="Payoneer">Payoneer</option>
                                                <option value="Paypal">Paypal</option>
                                                <option value="Upwork">Upwork</option>
                                            </select>

                                            <label for="message">Note:</label>
                                            <input type="text" id="message" class="form-control"> 
                                        </form>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                        <button type="button" id="approveConfirmBtn" class="btn btn-success">Approve</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <button id="reject_btn" type="button" class="btn btn-danger">
                            Reject
                        </button>
                    {% endif %}
                </div>
            </div>
        </div>    
    {% endblock %}
{% endblock %}

{% block javascripts %} 
    <script> 
        document.addEventListener("DOMContentLoaded", function() {
        const approveBtn = document.getElementById("approve_btn");
        const modal = document.getElementById("approveModal"); 
        const currentStatus = {{ approval.status }};

        // Event listener for the Approve button
        approveBtn.addEventListener("click", function() {

                if(currentStatus == 2){
                    const totalCommissionInput = document.getElementById("commission");
                    const totalAdjustmentInput = document.getElementById("adjustment");
                    const totalDeductionInput = document.getElementById("deduction");
                    const paymentMethodSelect = document.getElementById("payment_method"); 
                    // Clear input fields when modal is shown
                    totalCommissionInput.value = "";
                    totalAdjustmentInput.value = "";
                    totalDeductionInput.value = "";
                    paymentMethodSelect.selectedIndex = 0;
                }

                const messageInput = document.getElementById("message");
                messageInput.value = "";

                // Event listener for the "Approve" button inside the modal
                document.getElementById("approveConfirmBtn").addEventListener("click", function() {
                // Get input values
                const approvalMessage = messageInput.value;
                var data = {};
                if(currentStatus == 2){
                    const totalCommissionInput = document.getElementById("commission");
                    const totalAdjustmentInput = document.getElementById("adjustment");
                    const totalDeductionInput = document.getElementById("deduction");
                    const paymentMethodSelect = document.getElementById("payment_method"); 
                    
                    const totalCommission = parseFloat(totalCommissionInput.value) || 0;
                    const totalAdjustment = parseFloat(totalAdjustmentInput.value) || 0;
                    const totalDeduction = parseFloat(totalDeductionInput.value) || 0;
                    const selectedPaymentMethod = paymentMethodSelect.value;
                    

                    // Calculate new total based on input values
                    const newTotal = calculateNewTotal(totalCommission, totalAdjustment, totalDeduction);

                    

                    data = {
                        totalCommission,
                        totalAdjustment,
                        totalDeduction,
                        paymentMethod: selectedPaymentMethod,
                        message: approvalMessage,
                        newTotal,
                        status: 4
                    }; 
                }
                else{
                    data = {
                        message: approvalMessage,
                        status: 2
                    };
                }

                // Make an AJAX request to update the payroll approval
                const url = "{{ path('lhg_payroll_approval_status_update', {'id': approval.id}) }}"; // Update with your correct route 
                console.log(data);

                // Make a POST request using fetch
                fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                })
                .then(response => response.json())
                .then(responseData => {
                    // Handle success response here
                    console.log('Payroll approval updated successfully:', responseData);
                    {# location.reload(); #}
                    // Display a success message to the user or perform other actions
                })
                .catch(error => {
                    // Handle error here
                    console.log('Error updating payroll approval:', error);
                    // Display an error message to the user or perform other actions
                });

                // Close the modal
                $(modal).modal("hide"); 
            });
        });

        // Function to calculate new total based on input values
        function calculateNewTotal(commission, adjustment, deduction) {
            // Calculate the new total based on the given formula
            return {{ payrollData.total_earnings }} + commission + adjustment - deduction;
        }
    });



    </script>

{% endblock %}

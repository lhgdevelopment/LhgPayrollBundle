{% extends 'base.html.twig' %}
{% import "macros/widgets.html.twig" as widgets %}

{% block page_title %}{{ 'LHG Payroll'|trans }}{% endblock %}

{% block stylesheets %} 
    {{ parent() }}
    <style>
        .timeline {
    position: relative;
    width: 660px;
    margin: 0 auto;
    margin-top: 20px;
    padding: 1em 0;
    list-style-type: none;
    }

    .timeline:before {
    position: absolute;
    left: 50%;
    top: 0;
    content: ' ';
    display: block;
    width: 6px;
    height: 100%;
    margin-left: -3px;
    background: rgb(80,80,80);
    background: -moz-linear-gradient(top, rgba(80,80,80,0) 0%, rgb(80,80,80) 8%, rgb(80,80,80) 92%, rgba(80,80,80,0) 100%);
    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(30,87,153,1)), color-stop(100%,rgba(125,185,232,1)));
    background: -webkit-linear-gradient(top, rgba(80,80,80,0) 0%, rgb(80,80,80) 8%, rgb(80,80,80) 92%, rgba(80,80,80,0) 100%);
    background: -o-linear-gradient(top, rgba(80,80,80,0) 0%, rgb(80,80,80) 8%, rgb(80,80,80) 92%, rgba(80,80,80,0) 100%);
    background: -ms-linear-gradient(top, rgba(80,80,80,0) 0%, rgb(80,80,80) 8%, rgb(80,80,80) 92%, rgba(80,80,80,0) 100%);
    background: linear-gradient(to bottom, rgba(80,80,80,0) 0%, rgb(80,80,80) 8%, rgb(80,80,80) 92%, rgba(80,80,80,0) 100%);
    
    z-index: 5;
    }

    .timeline li {
    padding: 1em 0;
    }

    .timeline li:after {
    content: "";
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
    }

    .direction-l {
    position: relative;
    width: 300px;
    float: left;
    text-align: right;
    }

    .direction-r {
    position: relative;
    width: 300px;
    float: right;
    }

    .flag-wrapper {
    position: relative;
    display: inline-block;
    
    text-align: center;
    }

    .flag {
    position: relative;
    display: inline;
    background: rgb(248,248,248);
    padding: 6px 10px;
    border-radius: 5px;
    
    font-weight: 600;
    text-align: left;
    }

    .direction-l .flag {
    -webkit-box-shadow: -1px 1px 1px rgba(0,0,0,0.15), 0 0 1px rgba(0,0,0,0.15);
    -moz-box-shadow: -1px 1px 1px rgba(0,0,0,0.15), 0 0 1px rgba(0,0,0,0.15);
    box-shadow: -1px 1px 1px rgba(0,0,0,0.15), 0 0 1px rgba(0,0,0,0.15);
    }

    .direction-r .flag {
    -webkit-box-shadow: 1px 1px 1px rgba(0,0,0,0.15), 0 0 1px rgba(0,0,0,0.15);
    -moz-box-shadow: 1px 1px 1px rgba(0,0,0,0.15), 0 0 1px rgba(0,0,0,0.15);
    box-shadow: 1px 1px 1px rgba(0,0,0,0.15), 0 0 1px rgba(0,0,0,0.15);
    }

    .direction-l .flag:before,
    .direction-r .flag:before {
    position: absolute;
    top: 50%;
    right: -40px;
    content: ' ';
    display: block;
    width: 12px;
    height: 12px;
    margin-top: -10px;
    background: #fff;
    border-radius: 10px;
    border: 4px solid rgb(255,80,80);
    z-index: 10;
    }

    .direction-r .flag:before {
    left: -40px;
    }

    .direction-l .flag:after {
    content: "";
    position: absolute;
    left: 100%;
    top: 50%;
    height: 0;
    width: 0;
    margin-top: -8px;
    border: solid transparent;
    border-left-color: rgb(248,248,248);
    border-width: 8px;
    pointer-events: none;
    }

    .direction-r .flag:after {
    content: "";
    position: absolute;
    right: 100%;
    top: 50%;
    height: 0;
    width: 0;
    margin-top: -8px;
    border: solid transparent;
    border-right-color: rgb(248,248,248);
    border-width: 8px;
    pointer-events: none;
    }

    .time-wrapper {
    display: inline;
    
    line-height: 1em;
    font-size: 0.66666em;
    color: rgb(250,80,80);
    vertical-align: middle;
    }

    .direction-l .time-wrapper {
    float: left;
    }

    .direction-r .time-wrapper {
    float: right;
    }

    .time {
    display: inline-block;
    padding: 4px 6px;
    background: rgb(248,248,248);
    }

    .desc {
    margin: 1em 0.75em 0 0;
    
    font-size: 0.77777em;
    font-style: italic;
    line-height: 1.5em;
    }

    .direction-r .desc {
    margin: 1em 0 0 0.75em;
    }

    /* ================ Timeline Media Queries ================ */

    @media screen and (max-width: 660px) {

    .timeline {
        width: 100%;
        padding: 4em 0 1em 0;
    }

    .timeline li {
        padding: 2em 0;
    }

    .direction-l,
    .direction-r {
        float: none;
        width: 100%;

        text-align: center;
    }

    .flag-wrapper {
        text-align: center;
    }

    .flag {
        background: rgb(255,255,255);
        z-index: 15;
    }

    .direction-l .flag:before,
    .direction-r .flag:before {
    position: absolute;
    top: -30px;
        left: 50%;
        content: ' ';
        display: block;
        width: 12px;
        height: 12px;
        margin-left: -9px;
        background: #fff;
        border-radius: 10px;
        border: 4px solid rgb(255,80,80);
        z-index: 10;
    }

    .direction-l .flag:after,
    .direction-r .flag:after {
        content: "";
        position: absolute;
        left: 50%;
        top: -8px;
        height: 0;
        width: 0;
        margin-left: -8px;
        border: solid transparent;
        border-bottom-color: rgb(255,255,255);
        border-width: 8px;
        pointer-events: none;
    }

    .time-wrapper {
        display: block;
        position: relative;
        margin: 4px 0 0 0;
        z-index: 14;
    }

    .direction-l .time-wrapper {
        float: none;
    }

    .direction-r .time-wrapper {
        float: none;
    }

    .desc {
        position: relative;
        margin: 1em 0 0 0;
        padding: 1em;
        background: rgb(245,245,245);
        -webkit-box-shadow: 0 0 1px rgba(0,0,0,0.20);
        -moz-box-shadow: 0 0 1px rgba(0,0,0,0.20);
        box-shadow: 0 0 1px rgba(0,0,0,0.20);
        
    z-index: 15;
    }

    .direction-l .desc,
    .direction-r .desc {
        position: relative;
        margin: 1em 1em 0 1em;
        padding: 1em;
        
    z-index: 15;
    }

    }

    @media screen and (min-width: 400px ?? max-width: 660px) {

    .direction-l .desc,
    .direction-r .desc {
        margin: 1em 4em 0 4em;
    }

    }

    </style>
{% endblock %}

{% block main %}
    {% block content %} 
        <div class="mt-4 timeline-div">
            <div class="timeline">  
                <ul class="timeline">
                    <!-- Item 1 -->
                    <li>
                        <div class="direction-l"> 
                            <div class="flag-wrapper">
                                <span class="flag">{{ approval.user.alias }}</span>
                                <span class="time-wrapper"><span class="time">{{ approval.creationDate | date("Y-m-d g:i:sA") }}</span></span>
                            </div>
                            <div class="desc">{{ 'Submitted for approval' }}</div>
                        </div>
                    </li> 
                    {% for history in approvalHistory %}
                        <li>
                            <div class="direction-{% if loop.index is divisible by 2 %}l{% else %}r{% endif %}"> 
                                <div class="flag-wrapper">
                                    <span class="flag">{{ history.user.alias }}</span>
                                    <span class="time-wrapper"><span class="time">{{ history.date | date("Y-m-d g:i:sA") }}</span></span>
                                </div>
                                <div class="desc">{{ history.message }}</div>
                            </div>
                        </li> 
                        
                    {% endfor %}
                </ul>
            </div>

            {# {% for history in approvalHistory %}
                {{ history.date | date("Y-m-d g:i:sA") }}
            {% endfor %} #}
        </div>
        <div id="myPayroll" class="mt-4"> 
            <div class="mt-4">
                <div class="mt-4">                    
                    <p class="mt-6" style="margin-tp: 10px;"><strong>Name</strong>: {{ approval.user.alias  }}</p>
                    <p class="mt-6"><strong>Total Hours</strong>: {{ payrollData.total_hours|number_format(3) }} hrs</p>
                    <p><strong>Total Earnings</strong>: ${{ payrollData.total_earnings|number_format(3) }}</p>
                    {% if approval.status == 4 %}
                    <hr>
                    <p><strong>Commission</strong>: ${{ approval.commission|number_format(3) }}</p>
                    <p><strong>Adjustment</strong>: ${{ approval.adjustment|number_format(3) }}</p>
                    <p><strong>Deduction</strong>: ${{ approval.deduction|number_format(3) }}</p>
                    <hr>
                    <p><strong>Net Payable</strong>: ${{ approval.netPayable|number_format(3) }}</p>
                    <p><strong>Paid Through</strong>: {{ approval.paymentMethod }}</p>
                    {% endif %}
                </div>
                <div class="table-responsive mt-4">
                    <table class="table table-bordered">
                        <thead class="thead-dark">
                            <tr>
                                <th>Project</th>
                                <th>Total Duration</th>
                                <th>Total Amount</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for projectId, projectData in projectWiseData %}
                            <tr>
                                <td>{{ projectData.projectName }}</td>
                                <td>{{ projectData.totalDuration|number_format(3) }} hr</td>
                                <td>${{ projectData.totalAmount|number_format(3) }}</td>
                            </tr>
                            <tr>
                                <td colspan="3">
                                    <table class="sub-table table table-striped">
                                        <thead>
                                            <tr>
                                                <th>Date</th>
                                                <th>Total Duration</th>
                                                <th>Total Amount</th>
                                                <th>Begin</th>
                                                <th>End</th>
                                                <th>Description</th> 

                                            </tr>
                                        </thead>
                                        <tbody>
                                            {% for date, timesheetData in projectData.timesheetsByDate %}
                                            <tr>
                                                <td>{{ date }}</td>
                                                <td>{{ timesheetData.totalDuration|number_format(3) }} hr</td>
                                                <td>${{ timesheetData.totalAmount|number_format(3) }}</td>
                                            </tr>
                                            {% for timesheet in timesheetData.timesheets %}
                                            <tr>
                                                <td>{{ timesheet.date }}</td>
                                                <td>{{ timesheet.duration_in_hour|number_format(3) }} hr</td>
                                                <td>${{ timesheet.rate|number_format(3) }}</td>
                                                <td>{{ timesheet.begin }}</td>
                                                <td>{{ timesheet.end }}</td>
                                                <td>{{ timesheet.description | parse_links }}</td> 
                                            </tr>
                                            {% endfor %}
                                            {% endfor %}
                                        </tbody>
                                    </table>
                                </td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>

                    {# 1 = pending. team lead to approve / reject #}
                    {% if approval.status == 1 %}
                    <button id="approve_btn" type="button" class="btn btn-success" data-toggle="modal" data-target="#approveModal">
                        Team Lead Approve 
                    </button>

                    <div class="modal fade" id="approveModal" tabindex="-1" role="dialog" aria-labelledby="approveModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="approveModalLabel">Approve Payroll</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <form id="approvalForm">
                                        <label for="message">Note:</label>
                                        <input type="text" id="message" class="form-control"> 
                                    </form>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                    <button type="button" id="approveConfirmBtn" class="btn btn-success">Approve</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    {# 2 = approved by teamlead and finance to approve / reject #}
                    {% elseif approval.status == 2 and is_granted('ROLE_SUPER_ADMIN') %}
                        <!-- Add this button inside the if statement for admins -->
                        <button id="approve_btn" type="button" class="btn btn-success" data-toggle="modal" data-target="#approveModal">
                            Finance Lead Approve
                        </button>

                        <!-- Modal -->
                        <div class="modal fade" id="approveModal" tabindex="-1" role="dialog" aria-labelledby="approveModalLabel" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="approveModalLabel">Approve Payroll</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body"> 
                                        <form id="approvalForm">
                                            <label for="commission">Commission:</label>
                                            <input type="number" id="commission" class="form-control"> 

                                            <label for="adjustment">Adjustment:</label>
                                            <input type="number" id="adjustment" class="form-control">

                                            <label for="deduction">Deduction:</label>
                                            <input type="number" id="deduction" class="form-control"> 

                                            <label for="payment_method">Paid Through:</label>
                                            {# <input type="number" id="payment_method" class="form-control">  #}
                                            <select class="form-control" id="payment_method">
                                                <option value="Payoneer">Payoneer</option>
                                                <option value="Paypal">Paypal</option>
                                                <option value="Upwork">Upwork</option>
                                            </select>

                                            <label for="message">Note:</label>
                                            <input type="text" id="message" class="form-control"> 
                                        </form>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                        <button type="button" id="approveConfirmBtn" class="btn btn-success">Approve</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <button id="reject_btn" type="button" class="btn btn-danger">
                            Reject
                        </button>
                    {% endif %}
                </div>
            </div>
        </div> 
    {% endblock %}
{% endblock %}

{% block javascripts %} 
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script> 
        document.addEventListener("DOMContentLoaded", function() { 
        const approveBtn = document.getElementById("approve_btn");
        const modal = document.getElementById("approveModal"); 
        const currentStatus = {{ approval.status }};

        // Event listener for the Approve button
        if(approveBtn){
            approveBtn.addEventListener("click", function() {
                    if(currentStatus == 2){
                        const totalCommissionInput = document.getElementById("commission");
                        const totalAdjustmentInput = document.getElementById("adjustment");
                        const totalDeductionInput = document.getElementById("deduction");
                        const paymentMethodSelect = document.getElementById("payment_method"); 
                        // Clear input fields when modal is shown
                        totalCommissionInput.value = "";
                        totalAdjustmentInput.value = "";
                        totalDeductionInput.value = "";
                        paymentMethodSelect.selectedIndex = 0;
                    }

                    const messageInput = document.getElementById("message");
                    messageInput.value = "";

                    // Event listener for the "Approve" button inside the modal
                    document.getElementById("approveConfirmBtn").addEventListener("click", function() {
                    // Get input values
                    const approvalMessage = messageInput.value;
                    var data = {};
                    if(currentStatus == 2){
                        const totalCommissionInput = document.getElementById("commission");
                        const totalAdjustmentInput = document.getElementById("adjustment");
                        const totalDeductionInput = document.getElementById("deduction");
                        const paymentMethodSelect = document.getElementById("payment_method"); 
                        
                        const totalCommission = parseFloat(totalCommissionInput.value) || 0;
                        const totalAdjustment = parseFloat(totalAdjustmentInput.value) || 0;
                        const totalDeduction = parseFloat(totalDeductionInput.value) || 0;
                        const selectedPaymentMethod = paymentMethodSelect.value;
                        

                        // Calculate new total based on input values
                        const newTotal = calculateNewTotal(totalCommission, totalAdjustment, totalDeduction);

                        

                        data = {
                            totalCommission,
                            totalAdjustment,
                            totalDeduction,
                            paymentMethod: selectedPaymentMethod,
                            message: approvalMessage,
                            newTotal,
                            status: 4
                        }; 
                    }
                    else{
                        data = {
                            message: approvalMessage,
                            status: 2
                        };
                    }

                    // Make an AJAX request to update the payroll approval
                    const url = "{{ path('lhg_payroll_approval_status_update', {'id': approval.id}) }}"; // Update with your correct route 
                    console.log(data);

                    // Make a POST request using fetch
                    fetch(url, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    })
                    .then(response => response.json())
                    .then(responseData => {
                        // Handle success response here
                        Swal.fire({
                            position: 'top-end',
                            icon: 'success',
                            title: 'Updated successfully',
                            showConfirmButton: false,
                            timer: 1500
                        })
                        location.reload(); 
                        // Display a success message to the user or perform other actions
                    })
                    .catch(error => {
                        console.log(error); 
                        // Handle error here
                        Swal.fire({
                            position: 'top-end',
                            icon: 'error',
                            title: 'Something went wrong!',
                            showConfirmButton: false,
                            timer: 1500
                        })
                    });

                    // Close the modal
                    $(modal).modal("hide"); 
                });
            });
        }

        // Function to calculate new total based on input values
        function calculateNewTotal(commission, adjustment, deduction) {
            // Calculate the new total based on the given formula
            return {{ payrollData.total_earnings }} + commission + adjustment - deduction;
        }
    });



    </script>

{% endblock %}
